[project]
name = "{{ project_name_kebab_case }}"
version = "0.0.0"  # This is a placeholder, version is determined by git tag during CI/CD
description = "{{ description }}"
authors = [{ name = "{{ author_name }}", email = "{{ author_email }}" }]
requires-python = ">=3.13"
readme = "README.md"
dependencies = []

[dependency-groups]
dev = [
    "copier>=9.8.0",
    "dotenv-linter>=0.4.0,<0.5",
    "fawltydeps>=0.20.0,<1.0.0",
    "ipython>=8.14.0,<9",
    "mypy>=1.10.0,<2",
    "pytest-asyncio>=0.25.2,<0.26",
    "pytest-cov>=6.0.0,<7",
    "pytest-env>=1.1.3,<2",
    "pytest-mock>=3.14.0,<4",
    "pytest>=8.3.4,<9",
    "python-dotenv>=1.0.0,<2",
    "ruff>=0.14.1",
]

[tool.uv]
package = false

[tool.ruff]
line-length = 120

[tool.ruff.lint]
#  See https://docs.astral.sh/ruff/rules/ for more information.
select = [
    "PT",   # flake8-pytest-style
    "B",    # flake8-bugbear
    "S",    # flake8-bandit
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "I",    # isort
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "N",    # pep8-naming
    "E",    # pycodestyle
    "W",    # pycodestyle
    "F",    # pyflakes
    ]
ignore = ["S101", "A003", "B904", "N818", "COM812"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = true
mark-parentheses = true

[tool.ruff.lint.isort]
order-by-type = false

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "raise NotImplementedError()",
]

[tool.fawltydeps]
code = ["{{ project_name_snake_case }}"]
deps = ["pyproject.toml"]
ignore_unused = [
    # Dev dependencies. This list should contain ALL of them!
    "copier",
    "dotenv-linter",
    "fawltydeps",
    "ipython",
    "mypy",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-env",
    "pytest-mock",
    "python-dotenv",
    "pytest",
    "ruff",
]

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = false
disable_error_code = "misc"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--strict-markers -p no:warnings --cov=. --cov-fail-under=90 --cov-config=.coveragerc"
asyncio_mode = "auto"

[tool.pytest_env]
FLAVOR = "test"
DEBUG = "True"
SERVICE_NAME = "{{ project_name_kebab_case }}"
